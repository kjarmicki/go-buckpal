// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/account/application/port/out/update_account_state_port.go

// Package mock_account_application_port_out is a generated GoMock package.
package mock_account_application_port_out

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	account_domain "github.com/kjarmicki/go-buckpal/pkg/account/domain"
)

// MockUpdateAccountStatePort is a mock of UpdateAccountStatePort interface.
type MockUpdateAccountStatePort struct {
	ctrl     *gomock.Controller
	recorder *MockUpdateAccountStatePortMockRecorder
}

// MockUpdateAccountStatePortMockRecorder is the mock recorder for MockUpdateAccountStatePort.
type MockUpdateAccountStatePortMockRecorder struct {
	mock *MockUpdateAccountStatePort
}

// NewMockUpdateAccountStatePort creates a new mock instance.
func NewMockUpdateAccountStatePort(ctrl *gomock.Controller) *MockUpdateAccountStatePort {
	mock := &MockUpdateAccountStatePort{ctrl: ctrl}
	mock.recorder = &MockUpdateAccountStatePortMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUpdateAccountStatePort) EXPECT() *MockUpdateAccountStatePortMockRecorder {
	return m.recorder
}

// UpdateActivities mocks base method.
func (m *MockUpdateAccountStatePort) UpdateActivities(ctx context.Context, account *account_domain.Account) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateActivities", ctx, account)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateActivities indicates an expected call of UpdateActivities.
func (mr *MockUpdateAccountStatePortMockRecorder) UpdateActivities(ctx, account interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateActivities", reflect.TypeOf((*MockUpdateAccountStatePort)(nil).UpdateActivities), ctx, account)
}
